name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Check lockfile
        run: |
          echo "Checking for pnpm-lock.yaml..."
          ls -la pnpm-lock.yaml || echo "pnpm-lock.yaml not found"

      - name: Install dependencies
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "Lockfile found, attempting frozen install..."
            pnpm install --frozen-lockfile || {
              echo "Frozen lockfile failed, trying without frozen lockfile..."
              pnpm install --no-frozen-lockfile
            }
          else
            echo "No lockfile found, installing without frozen lockfile"
            pnpm install
          fi

      - name: Checkout aurenworks-schemas
        uses: actions/checkout@v5
        with:
          repository: aurenworks/aurenworks-schemas
          path: aurenworks-schemas
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Debug schemas repository structure
        run: |
          echo "Checking aurenworks-schemas directory structure..."
          ls -la aurenworks-schemas/ || echo "aurenworks-schemas directory not found"
          echo "Looking for openapi directory..."
          ls -la aurenworks-schemas/openapi/ || echo "openapi directory not found"
          echo "Looking for control-plane-v0.yaml..."
          ls -la aurenworks-schemas/openapi/control-plane-v0.yaml || echo "control-plane-v0.yaml not found"
          echo "Looking for openapi.yaml (alternative path)..."
          ls -la aurenworks-schemas/openapi/openapi.yaml || echo "openapi.yaml not found"
          echo "Looking for any yaml files in openapi directory..."
          find aurenworks-schemas -name "*.yaml" -o -name "*.yml" || echo "No yaml files found"
          echo "Checking if repository checkout was successful..."
          ls -la aurenworks-schemas/.git || echo "Git repository not found"

      - name: Generate API types
        run: |
          echo "Attempting to generate API types..."
          if pnpm client:gen; then
            echo "API types generated successfully"
          else
            echo "API type generation failed, checking if types.ts exists..."
            if [ -f "src/lib/api/types.ts" ]; then
              echo "Using existing types.ts file"
            else
              echo "No types.ts file found and generation failed"
              exit 1
            fi
          fi

      - name: Type check
        run: pnpm type-check

      - name: Lint
        run: pnpm lint

      - name: Check formatting
        run: pnpm format:check

      - name: Run tests
        run: pnpm test

      - name: Build
        run: pnpm build
